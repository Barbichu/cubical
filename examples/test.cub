module test where

-- This is a one line comment.

{- This comment
   is actually
   three lines. Fun. -}

-- The natural numbers.
data N = zero | suc (n : N)

-- A type declaration.
f : (A B : U) (a : A) (b c d : B) -> N -> N
f _ _ _ _ _ _ n = n

-- a function declaration
fst : N -> N -> N
fst x y = x

local : N -> N
local x =
  let y : N
      y = x
  in y

data List (A : U) = nil | cons (x : A) (xs : List A)

lambda : (A B C : U) -> A -> B -> C -> A
lambda = \ _ _ _ x y z -> x

id : (A : U) -> A -> A
id _ x = x